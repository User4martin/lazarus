<?xml version="1.0" encoding="UTF-8"?>
<fpdoc-descriptions>
  <package name="lazutils">
    <!--
     ====================================================================
      IntegerList
    ====================================================================
    -->
    <module name="IntegerList">
      <short>
        Provides lists for Integer data types implemented using generics.
      </short>
      <descr>
        <p>
          <file>integerlist.pas</file> contains a list for Integer values implemented using generics, and provides the same methods and properties for <var>Integer</var> types as provided for <var>Strings</var> in <var>TStringList</var>. They provide an overloaded <var>Sort</var> method to ensure that the specialization types are handled in the methods.
        </p>
      </descr>

      <element name="TByteList" link="#RTL.fgl.TFPGList">
        <short>Implements a specialization of TFPGList for Byte data types.</short>
        <descr>
          <p>
            <var>TByteList</var> provides an overloaded <var>Sort</var> method to ensure that values in the list are handled using a compare function that operates on Byte values.
          </p>
        </descr>
        <seealso>
          <link id="#rtl.fgl.TFPGList">TFPGList</link>
        </seealso>
      </element>

      <element name="TByteList.Sort" link="#rtl.fgl.TFPGList.Sort">
        <short>Sorts the Byte values stored in the list.</short>
        <descr>
          <p>
            <var>Sort</var> is an overloaded method in <var>TByteList</var> which calls the inherited method using the CompareByte function in the implementation section.
          </p>
        </descr>
        <seealso>
          <link id="#rtl.fgl.TFPGList.Sort">TFPGList.Sort</link>
        </seealso>
      </element>

      <element name="TWordList" link="#rtl.fgl.TFPGList">
        <short>Implements a specialization of TFPGList for Word data types.</short>
        <descr>
          <p>
            <var>TWordList</var> provides an overloaded <var>Sort</var> method to ensure that values in the list are handled using a compare function that operates on Word  values.
          </p>
        </descr>
        <seealso>
          <link id="#rtl.fgl.TFPGList">TFPGList</link>
        </seealso>
      </element>

      <element name="TWordList.Sort" link="#rtl.fgl.TFPGList.Sort">
        <short>Sorts the Word values stored in the list.</short>
        <descr>
          <p>
            <var>Sort</var> is an overloaded method in <var>TWordList</var> which calls the inherited method using the CompareWord function in the implementation section.
          </p>
        </descr>
        <seealso>
          <link id="#rtl.fgl.TFPGList.Sort">TFPGList.Sort</link>
        </seealso>
      </element>

      <element name="TCardinalList" link="#rtl.fgl.TFPGList">
        <short>Implements a specialization of TFPGList for Cardinal data types.</short>
        <descr>
          <p>
            <var>TCardinalList</var> provides an overloaded <var>Sort</var> method to ensure that values in the list are handled using a compare function that operates on Cardinal values.
          </p>
        </descr>
        <seealso>
          <link id="TCardinalList.Sort"/>
          <link id="#rtl.fgl.TFPGList.Sort">TFPGList.Sort</link>
          <link id="#rtl.fgl.TFPGList">TFPGList</link>
        </seealso>
      </element>

      <element name="TCardinalList.Sort" link="#rtl.fgl.TFPGList.Sort">
        <short>Sorts the Word values stored in the list.</short>
        <descr>
          <p>
            <var>Sort</var> is an overloaded method in <var>TCardinalList</var> which calls the inherited method using the CompareCardinal function in the implementation section.
          </p>
        </descr>
        <seealso>
          <link id="#rtl.fgl.TFPGList.Sort">TFPGList.Sort</link>
        </seealso>
      </element>

      <element name="TIntegerList" link="#rtl.fgl.TFPGList">
        <short>Implements a specialization of TFPGList for Integer data types.</short>
        <descr>
          <p>
            <var>TIntegerList</var> provides an overloaded <var>Sort</var> method to ensure that values in the list are handled using a compare function that operates on Integer values.
          </p>
        </descr>
        <seealso>
          <link id="TIntegerList.Sort"/>
          <link id="#rtl.fgl.TFPGList.Sort">TFPGList.Sort</link>
          <link id="#rtl.fgl.TFPGList">TFPGList</link>
        </seealso>
      </element>

      <element name="TIntegerList.Sort" link="#rtl.fgl.TFPGList.Sort">
        <short>Sorts the Integer values stored in the list.</short>
        <descr>
          <p>
            <var>Sort</var> is an overloaded method in <var>TIntegerList</var> which calls the inherited method using the CompareInteger function in the implementation section.
          </p>
        </descr>
        <seealso>
          <link id="#rtl.fgl.TFPGList.Sort">TFPGList.Sort</link>
        </seealso>
      </element>

      <element name="TInt64List" link="#rtl.fgl.TFPGList">
        <short>Implements a specialization of TFPGList for Int64 data types.</short>
        <descr>
          <p>
            <var>TInt64List</var> provides an overloaded <var>Sort</var> method to ensure that values in the list are handled using a compare function that operates on Int64  values.
          </p>
        </descr>
        <seealso>
          <link id="#rtl.fgl.TFPGList">TFPGList</link>
          <link id="#rtl.fgl.TFPGList.Sort">TFPGList.Sort</link>
        </seealso>
      </element>

      <element name="TInt64List.Sort" link="#rtl.fgl.TFPGList.Sort">
        <short>Sorts the Int64 values stored in the list.</short>
        <descr>
          <p>
            <var>Sort</var> is an overloaded method in <var>TInt64List</var> which calls the inherited method using the CompareInt64 function in the implementation section.
          </p>
        </descr>
        <seealso>
          <link id="#rtl.fgl.TFPGList.Sort">TFPGList.Sort</link>
        </seealso>
      </element>

    </module>
    <!-- IntegerList -->

  </package>
</fpdoc-descriptions>
