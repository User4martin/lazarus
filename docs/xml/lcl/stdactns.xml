<?xml version="1.0" encoding="UTF-8"?>
<fpdoc-descriptions>
  <package name="lcl">
    <!--
    ====================================================================
      StdActns
    ====================================================================
    -->
    <module name="StdActns">
      <short>
        Defines standard actions to be used in Action Lists in the LCL.
        </short>
      <descr>
        <p>
          <file>stdactns.pas</file> contains <var>TAction</var> descendents
          which can be used in <var>TActionList</var> for common actions
          performed using controls. This file is part of the Lazarus Component
          Library (<b>LCL</b>).
        </p>
        <p>
          The following components are registered but not displayed on the
          Lazarus IDE component palette:
        </p>
        <p>
          <b>Edit</b> Actions
        </p>
        <ul>
          <li>TEditCut</li>
          <li>TEditCopy</li>
          <li>TEditPaste</li>
          <li>TEditSelectAll</li>
          <li>TEditUndo</li>
          <li>TEditDelete</li>
        </ul>
        <p>
          <b>Search</b> Actions
        </p>
        <ul>
          <li>TSearchFind</li>
          <li>TSearchReplace</li>
          <li>TSearchFindFirst</li>
          <li>TSearchFindNext</li>
        </ul>
        <p>
          <b>Help</b> Actions
        </p>
        <ul>
          <li>THelpAction</li>
          <li>THelpContents</li>
          <li>THelpTopicSearch</li>
          <li>THelpOnHelp</li>
          <li>THelpContextAction</li>
        </ul>
        <p>
          <b>Dialog</b> Actions
        </p>
        <ul>
          <li>TFontEdit</li>
          <li>TColorSelect</li>
        </ul>
        <p>
          <b>File</b> Actions
        </p>
        <ul>
          <li>TFileOpen</li>
          <li>TFileOpenWith</li>
          <li>TFileSaveAs</li>
          <li>TFileExit</li>
        </ul>
      </descr>

      <!-- unresolved references -->
      <element name="Classes"/>
      <element name="SysUtils"/>
      <element name="ActnList"/>
      <element name="Forms"/>
      <element name="Dialogs"/>
      <element name="StdCtrls"/>
      <element name="Clipbrd"/>

      <element name="THintAction" link="#lcl.forms.TCustomHintAction">
        <short>
          <var>THintAction </var>- standard action for dealing with requests
          for a <var>Hint</var>.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TEditAction">
        <short>
          <var>TEditAction </var>- base class for actions associated with the
          various <var>Edit</var> menu options.
        </short>
        <descr/>
        <seealso>
          <link id="#lcl.actnlist.TAction">TAction</link>
        </seealso>
      </element>

      <element name="TEditAction.FControl">
        <short>
          <var>FControl</var> - local variable holding the Edit control
          associated with this action.
        </short>
      </element>

      <element name="TEditAction.SetControl">
        <short>
          <var>SetControl</var> - specifies the Edit control associated with
          this action.
        </short>
        <descr/>
        <seealso/>
      </element>
      <element name="TEditAction.SetControl.AValue">
        <short/>
      </element>

      <element name="TEditAction.Notification" link="#rtl.classes.TComponent.Notification">
        <short>
          Handles notifcations when a control in the class instance is added
          or removed.
        </short>
        <descr/>
        <seealso/>
      </element>
      <element name="TEditAction.Notification.AComponent">
        <short/>
      </element>
      <element name="TEditAction.Notification.Operation">
        <short/>
      </element>

      <element name="TEditAction.Destroy" link="#rtl.classes.TBasicAction.Destroy">
        <short>Destructor for the class instance.</short>
        <descr>
          Calls the inherited destructor.
        </descr>
        <seealso/>
      </element>

      <element name="TEditAction.HandlesTarget" link="#rtl.classes.TBasicAction.HandlesTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TEditAction.HandlesTarget.Result">
        <short/>
      </element>
      <element name="TEditAction.HandlesTarget.Target">
        <short/>
      </element>

      <element name="TEditAction.Control">
        <short>The Edit <var>Control</var> associated with this action.</short>
        <descr>
          <p>
            Limits the target for the action to a specific control.
          </p>
        </descr>
        <seealso/>
      </element>

      <element name="TEditCut">
        <short>
          <var>TEditCut</var>- standard action associated with the
          <var>Edit Cut</var> menu option.
        </short>
        <descr/>
        <seealso>
          <link id="TEditAction"/>
        </seealso>
      </element>

      <element name="TEditCut.ExecuteTarget" link="#rtl.classes.TBasicAction.ExecuteTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TEditCut.ExecuteTarget.Target">
        <short/>
      </element>

      <element name="TEditCut.UpdateTarget" link="#rtl.classes.TBasicAction.UpdateTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TEditCut.UpdateTarget.Target">
        <short/>
      </element>

      <element name="TEditCopy">
        <short>
          <var>TEditCopy</var> - standard action associated with the
          <var>Edit Copy</var> menu option.
        </short>
        <descr/>
        <seealso>
          <link id="TEditAction"/>
        </seealso>
      </element>

      <element name="TEditCopy.ExecuteTarget" link="#rtl.classes.TBasicAction.ExecuteTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TEditCopy.ExecuteTarget.Target">
        <short/>
      </element>

      <element name="TEditCopy.UpdateTarget" link="#rtl.classes.TBasicAction.UpdateTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TEditCopy.UpdateTarget.Target">
        <short/>
      </element>

      <element name="TEditPaste">
        <short>
          <var>TEditPaste</var> - standard action associated with the
          <var>Edit Paste</var> menu option.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TEditPaste.UpdateTarget" link="#rtl.classes.TBasicAction.UpdateTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TEditPaste.UpdateTarget.Target">
        <short/>
      </element>

      <element name="TEditPaste.ExecuteTarget" link="#rtl.classes.TBasicAction.ExecuteTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TEditPaste.ExecuteTarget.Target">
        <short/>
      </element>

      <element name="TEditSelectAll">
        <short>
          <var>TEditSelectAll</var> - standard action associated with the
          <var>Edit Select All </var>menu option.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TEditSelectAll.ExecuteTarget" link="#rtl.classes.TBasicAction.ExecuteTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TEditSelectAll.ExecuteTarget.Target">
        <short/>
      </element>

      <element name="TEditSelectAll.UpdateTarget" link="#rtl.classes.TBasicAction.UpdateTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TEditSelectAll.UpdateTarget.Target">
        <short/>
      </element>

      <element name="TEditUndo">
        <short>
          <var>TEditUndo</var> - standard action associated with the
          <var>Edit Undo</var> menu option.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TEditUndo.ExecuteTarget" link="#rtl.classes.TBasicAction.ExecuteTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TEditUndo.ExecuteTarget.Target">
        <short/>
      </element>

      <element name="TEditUndo.UpdateTarget" link="#rtl.classes.TBasicAction.UpdateTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TEditUndo.UpdateTarget.Target">
        <short/>
      </element>

      <element name="TEditDelete">
        <short>
          <var>TEditDelete</var> - standard action associated with the
          <var>Edit Delete</var> menu option.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TEditDelete.ExecuteTarget" link="#rtl.classes.TBasicAction.ExecuteTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TEditDelete.ExecuteTarget.Target">
        <short/>
      </element>

      <element name="TEditDelete.UpdateTarget" link="#rtl.classes.TBasicAction.UpdateTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TEditDelete.UpdateTarget.Target">
        <short/>
      </element>

      <element name="THelpAction">
        <short>
          <var>THelpAction</var> - base class for actions associated with
          the various <var>Help</var> menu options.
        </short>
        <descr/>
        <seealso>
          <link id="#lcl.actnlist.TAction">TAction</link>
        </seealso>
      </element>

      <element name="THelpAction.Create" link="#rtl.classes.TBasicAction.Create">
        <short>Constructor for the class instance.</short>
        <descr>
          Calls the inherited constructor.
        </descr>
        <seealso/>
      </element>
      <element name="THelpAction.Create.TheOwner">
        <short>Owner of the class instance.</short>
      </element>

      <element name="THelpAction.HandlesTarget" link="#rtl.classes.TBasicAction.HandlesTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="THelpAction.HandlesTarget.Result">
        <short/>
      </element>
      <element name="THelpAction.HandlesTarget.Target">
        <short/>
      </element>

      <element name="THelpAction.UpdateTarget" link="#rtl.classes.TBasicAction.UpdateTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="THelpAction.UpdateTarget.Target">
        <short/>
      </element>

      <element name="THelpContents">
        <short>
          <var>THelpContents</var> - standard action associated with the
          <var>Help Contents</var> menu option.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="THelpContents.ExecuteTarget" link="#rtlClasses.TBasicAction.ExecuteTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="THelpContents.ExecuteTarget.Target">
        <short/>
      </element>

      <element name="THelpTopicSearch">
        <short>
          <var>THelpTopicSearch</var> - standard action associated with the
          <var>Help Topic Search</var> menu option.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="THelpTopicSearch.ExecuteTarget" link="#rtl.classes.TBasicAction.ExecuteTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="THelpTopicSearch.ExecuteTarget.Target">
        <short/>
      </element>

      <element name="THelpOnHelp">
        <short>
          <var>THelpOnHelp</var> - standard action associated with the
          <var>Help On Help</var> menu item (i.e. how to get help).
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="THelpOnHelp.ExecuteTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="THelpOnHelp.ExecuteTarget.Target">
        <short/>
      </element>

      <element name="THelpContextAction">
        <short>
          <var>THelpContextAction</var> - standard action for providing
          context-sensitive <var>Help</var>.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="THelpContextAction.ExecuteTarget" link="#rtl.classes.TBasicAction.ExecuteTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="THelpContextAction.ExecuteTarget.Target">
        <short/>
      </element>

      <element name="THelpContextAction.UpdateTarget" link="#rtl.classes.TBasicAction.UpdateTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="THelpContextAction.UpdateTarget.Target">
        <short/>
      </element>

      <element name="TCommonDialogClass">
        <short>
          <var>TCommonDialogClass</var> - class of <var>TCommonDialog</var>.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TCommonDialogAction">
        <short>
          <var>TCommonDialogAction</var> - base class for providing actions
          associated with <var>Dialogs</var>.
        </short>
        <descr/>
        <seealso>
          <link id="#lcl.actnlist.TCustomAction">TCustomAction</link>
        </seealso>
      </element>

      <element name="TCommonDialogAction.FBeforeExecute"/>
      <element name="TCommonDialogAction.FExecuteResult"/>
      <element name="TCommonDialogAction.FOnAccept"/>
      <element name="TCommonDialogAction.FOnCancel"/>

      <element name="TCommonDialogAction.FDialog">
        <short>
          <var>FDialog</var> - local variable holding the Dialog associated
          with this action.
        </short>
      </element>

      <element name="TCommonDialogAction.DoAccept">
        <short>
          <var>DoAccept</var> - perform the code for the
          <var>OnAccept</var> event.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TCommonDialogAction.DoBeforeExecute">
        <short>Performs the BeforeExecute notification when assigned.</short>
        <descr/>
        <seealso/>
      </element>

      <element name="TCommonDialogAction.DoCancel">
        <short>
          <var>DoCancel</var> - perform the code for the
          <var>OnCancel</var> event.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TCommonDialogAction.GetDialogClass">
        <short>
          <var>GetDialogClass</var> - returns the class type for the dialog
          associated with this action.
        </short>
        <descr/>
        <seealso/>
      </element>
      <element name="TCommonDialogAction.GetDialogClass.Result">
        <short/>
      </element>

      <element name="TCommonDialogAction.CreateDialog">
        <short>
          Create a new instance of the class type used in the Dialog property.
        </short>
        <descr>
          <p>
            Calls GetDialogClass to get the class reference used to create
            the dialog instance. When assigned, it is created and stored in
            the Dialog property. It Name is set to the ClassName for the
            class reference, and it is marked as a sub-component for the
            class instance.
          </p>
        </descr>
        <seealso/>
      </element>

      <element name="TCommonDialogAction.Create" link="#rtl.classes.TBasicAction.Create">
        <short>Constructor for the class instance.</short>
        <descr/>
        <seealso/>
      </element>
      <element name="TCommonDialogAction.Create.TheOwner">
        <short>Owner for the class instance.</short>
      </element>

      <element name="TCommonDialogAction.HandlesTarget" link="#rtl.classes.TBasicAction.HandlesTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCommonDialogAction.Handlestarget.Result">
        <short/>
      </element>
      <element name="TCommonDialogAction.Handlestarget.Target">
        <short/>
      </element>

      <element name="TCommonDialogAction.ExecuteTarget" link="#rtl.classes.TBasicAction.ExecuteTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCommonDialogAction.ExecuteTarget.Target">
        <short/>
      </element>

      <element name="TCommonDialogAction.ExecuteResult">
        <short>
          <var>ExecuteResult</var> - the result of the execution:
          True if successful.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TCommonDialogAction.BeforeExecute">
        <short>
          <var>BeforeExecute</var> - event handler for performance before
          execution of the action.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TCommonDialogAction.OnAccept">
        <short>
          <var>OnAccept</var> - event handler for a press of the Accept button.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TCommonDialogAction.OnCancel">
        <short>
          <var>OnCancel</var> - event handler for a press of the Cancel button.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TCommonDialogAction.OnUpdate">
        <short/>
        <descr/>
        <seealso/>
      </element>

      <element name="TFileAction">
        <short>
          <var>TFileAction</var> - base class for providing actions associated
          with various file dialogs and menu options.
        </short>
        <descr/>
        <seealso>
          <link id="TCommonDialogAction"/>
        </seealso>
      </element>

      <element name="TFileAction.GetFileName">
        <short>
          Gets the value for the FileName property.
        </short>
        <descr/>
        <seealso>
          <link id="TFileAction.FileName"/>
        </seealso>
      </element>
      <element name="TFileAction.GetFileName.Result">
        <short>Value for the property.</short>
      </element>

      <element name="TFileAction.SetFileName">
        <short>
          Sets the value for the FileName property.
        </short>
        <descr/>
        <seealso>
          <link id="TFileAction.FileName"/>
        </seealso>
      </element>
      <element name="TFileAction.SetFileName.AValue">
        <short>New value for the property.</short>
      </element>

      <element name="TFileAction.GetDialog">
        <short>
          <var>GetDialog</var> - returns a <var>TOpenDialog</var> for use in
          this File action.
        </short>
        <descr/>
        <seealso>
          <link id="#lcl.dialogs.TOpenDialog">TOpenDialog</link>
        </seealso>
      </element>
      <element name="TFileAction.GetDialog.Result">
        <short>TOpenDialog instance used in the class.</short>
      </element>

      <element name="TFileAction.FileName">
        <short>
          File name returned from the dialog in the action.
        </short>
        <descr>
          <p>
            <var>FileName</var> is a <var>TFileName</var> property with the
            file name returned in the Open dialog for the action.
          </p>
        </descr>
        <seealso>
          <link id="TFileAction.GetDialog"/>
        </seealso>
      </element>

      <element name="TFileOpen">
        <short>
          <var>TFileOpen</var> - standard action (including opening a dialog)
          associated with the <var>File Open</var> menu option.
        </short>
        <descr/>
        <seealso>
          <link id="TFileAction"/>
        </seealso>
      </element>

      <element name="TFileOpen.FUseDefaultApp"/>

      <element name="TFileOpen.GetDialog">
        <short>
          Gets the value for the Dialog property.
        </short>
        <descr/>
        <seealso>
          <link id="TFileOpen.Dialog"/>
        </seealso>
      </element>
      <element name="TFileOpen.GetDialog.Result">
        <short>Value for the property.</short>
      </element>

      <element name="TFileOpen.GetDialogClass" link="#lcl.stdactns.TCommonDialogAction.GetDialogClass">
        <short>
          Gets the class reference used to create the Dialog for the action.
        </short>
        <descr/>
        <seealso>
          <link id="TFileOpen.Dialog"/>
          <link id="TCommonDialogClass"/>
        </seealso>
      </element>
      <element name="TFileOpen.GetDialogClass.Result">
        <short>TCommonDialogClass reference used to create the Dialog.</short>
      </element>

      <element name="TFileOpen.Caption" link="#lcl.actnlist.TCustomAction.Caption"/>

      <element name="TFileOpen.Dialog">
        <short>The Open <var>Dialog</var> to be used with this action.</short>
        <descr>
          <p>
            <var>Dialog</var> is a read-only <var>TOpenDialog</var> property
            with the dialog used to select a file for the File Open action.
          </p>
        </descr>
        <seealso>
          <link id="TFileAction.FileName"/>
        </seealso>
      </element>

      <element name="TFileOpen.Enabled" link="#lcl.actnlist.TCustomAction.Enabled"/>
      <element name="TFileOpen.HelpContext" link="#lcl.actnlist.TCustomAction.HelpContext"/>
      <element name="TFileOpen.HelpKeyword" link="#lcl.actnlist.TCustomAction.HelpKeyword"/>
      <element name="TFileOpen.HelpType" link="#lcl.actnlist.TCustomAction.HelpType"/>
      <element name="TFileOpen.Hint" link="#lcl.actnlist.TCustomAction.Hint"/>
      <element name="TFileOpen.ImageIndex" link="#lcl.actnlist.TCustomAction.ImageIndex"/>
      <element name="TFileOpen.ShortCut" link="#lcl.actnlist.TCustomAction.ShortCut"/>
      <element name="TFileOpen.SecondaryShortCuts" link="#lcl.actnlist.TCustomAction.SecondaryShortCuts"/>

      <element name="TFileOpen.UseDefaultApp">
        <short>
          Indicates if the default application should be used to open the
          file for the action.
        </short>
        <descr>
          <p>
            <var>UseDefaultApp</var> is a <var>Boolean</var> property which
            indicates if the default application should be used to open the
            selected <var>FileName</var>. The default value for the property is
            <b>False</b>.
          </p>
          <remark>
            UseDefaultApp is not used in the current LCL version.
          </remark>
        </descr>
        <seealso>
          <link id="TFileAction.FileName"/>
        </seealso>
      </element>

      <element name="TFileOpen.Visible" link="#lcl.actnlist.TCustomAction.Visible"/>
      <element name="TFileOpen.BeforeExecute" link="#lcl.stdactns.TCommonDialogAction.BeforeExecute"/>
      <element name="TFileOpen.OnAccept" link="#lcl.stdactns.TCommonDialogAction.OnAccept"/>
      <element name="TFileOpen.OnCancel" link="#lcl.stdactns.TCommonDialogAction.OnCancel"/>
      <element name="TFileOpen.OnHint" link="#lcl.actnlist.TCustomAction.OnHint"/>

      <element name="TFileOpenWith">
        <short>
          <var>TFileOpenWith</var> - standard action (including opening a
          dialog) associated with the <var>File Open With</var> menu option.
        </short>
        <descr>
          <p>
            <var>TFileOpenWith</var> is a standard action (including opening a
            dialog) associated with the <var>File Open With</var> menu option.
            Gives the User an opportunity to choose the application with which
            to open a file.
          </p>
        </descr>
        <seealso>
          <link id="TFileOpen"/>
        </seealso>
      </element>

      <element name="TFileOpenWith.FAfterOpen"/>
      <element name="TFileOpenWith.FFileName"/>

      <element name="TFileOpenWith.FileName">
        <short>File name for the Open With action.</short>
        <descr>
          <var>FileName</var> is a <var>TFileName</var> property with the
          file name used in the Open With action.
        </descr>
        <seealso/>
      </element>

      <element name="TFileOpenWith.AfterOpen">
        <short>
          <var>AfterOpen</var> - event handler to be performed after file
          is opened.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TFileSaveAs">
        <short>
          <var>TFileSaveAs</var> - standard action (including opening a dialog)
          associated with the <var>File Save As</var> menu option.
        </short>
        <descr>
          <p>
            <var>TFileSaveAs</var> is a standard action (including opening a
            dialog) associated with the <var>File Save As</var> menu option.
            Gives the user an opportunity to select or enter a name to use for
            saving the file.
          </p>
        </descr>
        <seealso>
          <link id="TFileAction"/>
        </seealso>
      </element>

      <element name="TFileSaveAs.GetSaveDialog">
        <short>Gets the value for the Dialog property.</short>
        <descr/>
        <seealso>
          <link id="TFileSaveAs.Dialog"/>
        </seealso>
      </element>
      <element name="TFileSaveAs.GetSaveDialog.Result">
        <short>Value for the Dialog property.</short>
      </element>

      <element name="TFileSaveAs.GetDialogClass" link="#lcl.stdactns.TCommonDialogAction.GetDialogClass">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileSaveAs.GetDialogClass.Result">
        <short/>
      </element>

      <element name="TFileSaveAs.Caption" link="#lcl.actnlist.TCustomAction.Caption"/>

      <element name="TFileSaveAs.Dialog">
        <short>The Save <var>Dialog</var> to be used with this action.</short>
        <descr/>
        <seealso/>
      </element>

      <element name="TFileSaveAs.Enabled" link="#lcl.actnlist.TCustomAction.Enabled"/>
      <element name="TFileSaveAs.HelpContext" link="#lcl.actnlist.TCustomAction.HelpContext"/>
      <element name="TFileSaveAs.Hint" link="#lcl.actnlist.TCustomAction.Hint"/>
      <element name="TFileSaveAs.ImageIndex" link="#lcl.actnlist.TCustomAction.ImageIndex"/>
      <element name="TFileSaveAs.ShortCut" link="#lcl.actnlist.TCustomAction.ShortCut"/>
      <element name="TFileSaveAs.SecondaryShortCuts" link="#lcl.actnlist.TCustomAction.SecondaryShortCuts"/>
      <element name="TFileSaveAs.Visible" link="#lcl.actnlist.TCustomAction.Visible"/>
      <element name="TFileSaveAs.BeforeExecute" link="#lcl.stdactns.TCommonDialogAction.BeforeExecute"/>
      <element name="TFileSaveAs.OnAccept" link="#lcl.stdactns.TCommonDialogAction.OnAccept"/>
      <element name="TFileSaveAs.OnCancel" link="#lcl.stdactns.TCommonDialogAction.OnCancel"/>
      <element name="TFileSaveAs.OnHint" link="#lcl.actnlist.TCustomAction.OnHint"/>

      <element name="TFileExit">
        <short>
          <var>TFileExit</var> - standard action (closing file and terminating
          application) associated with the <var>File Exit</var> menu option.
        </short>
        <descr/>
        <seealso>
          <link id="#lcl.actnlist.TCustomAction">TCustomAction</link>
        </seealso>
      </element>

      <element name="TFileExit.HandlesTarget" link="#rtl.classes.TBasicAction.HandlesTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileExit.HandlesTarget.Result">
        <short/>
      </element>
      <element name="TFileExit.HandlesTarget.Target">
        <short/>
      </element>

      <element name="TFileExit.ExecuteTarget" link="#rtl.classes.TBasicAction.ExecuteTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileExit.ExecuteTarget.Target">
        <short/>
      </element>

      <element name="TFileExit.Caption" link="#lcl.actnlist.TCustomAction.Caption"/>
      <element name="TFileExit.Enabled" link="#lcl.actnlist.TCustomAction.Enabled"/>
      <element name="TFileExit.HelpContext" link="#lcl.actnlist.TCustomAction.HelpContext"/>
      <element name="TFileExit.HelpKeyword" link="#lcl.actnlist.TCustomAction.HelpKeyword"/>
      <element name="TFileExit.HelpType" link="#lcl.actnlist.TCustomAction.HelpType"/>
      <element name="TFileExit.Hint" link="#lcl.actnlist.TCustomAction.Hint"/>
      <element name="TFileExit.ImageIndex" link="#lcl.actnlist.TCustomAction.ImageIndex"/>
      <element name="TFileExit.ShortCut" link="#lcl.actnlist.TCustomAction.ShortCut"/>
      <element name="TFileExit.SecondaryShortCuts" link="#lcl.actnlist.TCustomAction.SecondaryShortCuts"/>
      <element name="TFileExit.Visible" link="#lcl.actnlist.TCustomAction.Visible"/>
      <element name="TFileExit.OnHint" link="#lcl.actnlist.TCustomAction.OnHint"/>

      <element name="TSearchAction">
        <short>
          <var>TSearchAction</var> - base class for the actions associated
          with the various <var>Search</var> menu options.
        </short>
        <descr/>
        <seealso>
          <link id="TCommonDialogAction"/>
        </seealso>
      </element>

      <element name="TSearchAction.FControl">
        <short>
          <var>FControl</var> - local variable holding the control for
          use with this action.
        </short>
      </element>

      <element name="TSearchAction.CreateDialog">
        <short>Creates the class instance used in the Dialog property.</short>
        <descr>
          <p>
            Calls the inherited CreateDialog method, and assigns the Search
            method as the OnFind event handler in Dialog.
          </p>
        </descr>
        <seealso/>
      </element>

      <element name="TSearchAction.Notification" link="#rtl.classes.TComponent.Notification">
        <short>
          Handles notifcations when a control in the class instance is added
          or removed.
        </short>
        <descr/>
        <seealso/>
      </element>
      <element name="TSearchAction.Notification.AComponent">
        <short>Component for the notification.</short>
      </element>
      <element name="TSearchAction.Notification.Operation">
        <short>Operation for the notification.</short>
      </element>

      <element name="TSearchAction.UpdateControl">
        <short>
          Updates the internal Control to the value in NewControl.
        </short>
        <descr/>
        <seealso/>
      </element>
      <element name="TSearchAction.UpdateControl.NewControl">
        <short>New value for the internal Control.</short>
      </element>

      <element name="TSearchAction.PerformSearch">
        <short>Performs the seach action using the Dialog options.</short>
        <descr>
          <p>
            Performs the search action using the options and search criteria
            set in the <var>Dialog</var> property. Called from the
            <var>Search</var> method.
          </p>
        </descr>
        <seealso/>
      </element>
      <element name="TSearchAction.PerformSearch.Result">
        <short>
          True when the search value is found in the text for the
          internal Control.
        </short>
      </element>

      <element name="TSearchAction.ShowNotFound">
        <short>Displays a dialog with a "Not Found" message.</short>
        <descr/>
        <seealso/>
      </element>

      <element name="TSearchAction.Create" link="#rtl.classes.TBasicAction.Create">
        <short>Constructor for the class instance.</short>
        <descr>
          <p>
            Calls the inherited constructor, and sets the value for the
            internal Control to <b>Nil</b>.
          </p>
        </descr>
        <seealso/>
      </element>
      <element name="TSearchAction.Create.TheOwner">
        <short>Owner for the class instance.</short>
      </element>

      <element name="TSearchAction.Destroy" link="#rtl.classes.TBasicAction.Destroy">
        <short>Destructor for the class instance.</short>
        <descr>
          <p>
            Removes the free notification for the internal Control
            (when assigned), and calls the inherited destructor.
          </p>
        </descr>
        <seealso/>
      </element>

      <element name="TSearchAction.HandlesTarget" link="#rtl.classes.TBasicAction.HandlesTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TSearchAction.HandlesTarget.Result">
        <short/>
      </element>
      <element name="TSearchAction.HandlesTarget.Target">
        <short/>
      </element>

      <element name="TSearchAction.Search">
        <short>Performs the <var>Search</var> action.</short>
        <descr/>
        <seealso/>
      </element>
      <element name="TSearchAction.Search.Sender">
        <short/>
      </element>

      <element name="TSearchAction.UpdateTarget" link="#rtl.classes.TBasicAction.UpdateTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TSearchAction.UpdateTarget.Target">
        <short/>
      </element>

      <element name="TSearchAction.ExecuteTarget" link="#rtl.classes.TBasicAction.ExecuteTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TSearchAction.ExecuteTarget.Target">
        <short/>
      </element>

      <element name="TSearchFind">
        <short>
          <var>TSearchFind</var> - the action associated with a Search and
          Find dialog (as opposed to search and replace).
        </short>
        <descr/>
        <seealso>
          <link id="TSearchAction"/>
        </seealso>
      </element>

      <element name="TSearchFind.GetFindDialog"/>
      <element name="TSearchFind.GetFindDialog.Result"/>

      <element name="TSearchFind.GetDialogClass" link="#lcl.stdactns.TCommonDialogAction.GetDialogClass">
        <short/>
        <descr>
          <p>
            Returns the <var>TFindDialog</var> class type in <var>TSearchFind</var>.
          </p>
        </descr>
        <seealso/>
      </element>
      <element name="TSearchFind.GetDialogClass.Result">
        <short>Returns TFindDialog for the action.</short>
      </element>

      <element name="TSearchFind.Caption" link="#lcl.actnlist.TCustomAction.Caption"/>

      <element name="TSearchFind.Dialog">
        <short>The Find<var>Dialog</var> to be used with this action.</short>
        <descr/>
        <seealso/>
      </element>

      <element name="TSearchFind.Enabled" link="#lcl.actnlist.TCustomAction.Enabled"/>
      <element name="TSearchFind.HelpContext" link="#lcl.actnlist.TCustomAction.HelpContext"/>
      <element name="TSearchFind.HelpKeyword" link="#lcl.actnlist.TCustomAction.HelpKeyword"/>
      <element name="TSearchFind.HelpType" link="#lcl.actnlist.TCustomAction.HelpType"/>
      <element name="TSearchFind.Hint" link="#lcl.actnlist.TCustomAction.Hint"/>
      <element name="TSearchFind.ImageIndex" link="#lcl.actnlist.TCustomAction.ImageIndex"/>
      <element name="TSearchFind.ShortCut" link="#lcl.actnlist.TCustomAction.ShortCut"/>
      <element name="TSearchFind.SecondaryShortCuts" link="#lcl.actnlist.TCustomAction.SecondaryShortCuts"/>
      <element name="TSearchFind.Visible" link="#lcl.actnlist.TCustomAction.Visible"/>
      <element name="TSearchFind.BeforeExecute" link="#lcl.stdactns.TCommonDialogAction.BeforeExecute"/>
      <element name="TSearchFind.OnAccept" link="#lcl.stdactns.TCommonDialogAction.OnAccept"/>
      <element name="TSearchFind.OnCancel" link="#lcl.stdactns.TCommonDialogAction.OnCancel"/>
      <element name="TSearchFind.OnHint" link="#lcl.actnlist.TCustomAction.OnHint"/>

      <element name="TSearchReplace">
        <short>
          <var>TSearchReplace</var> - action associated with the <var>Search
          and Replace</var> menu option and dialogs.
        </short>
        <descr/>
        <seealso>
          <link id="TSearchAction"/>
        </seealso>
      </element>

      <element name="TSearchReplace.GetReplaceDialog"/>
      <element name="TSearchReplace.GetReplaceDialog.Result"/>

      <element name="TSearchReplace.GetDialogClass" link="#lcl.stdactns.TCommonDialogAction.GetDialogClass">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TSearchReplace.CreateDialog" link="#lcl.stdactns.TCommonDialogAction.CreateDialog"/>

      <element name="TSearchReplace.Replace">
        <short>
          <var>Replace</var> - the method to perform the Replace action once
          the specified text has been found.
        </short>
        <descr/>
        <seealso/>
      </element>

      <element name="TSearchReplace.Caption" link="#lcl.actnlist.TCustomAction.Caption"/>

      <element name="TSearchReplace.Dialog">
        <short>The Replace<var>Dialog</var> to be used with this action.</short>
        <descr/>
        <seealso/>
      </element>

      <element name="TSearchReplace.Enabled" link="#lcl.actnlist.TCustomAction.Enabled"/>
      <element name="TSearchReplace.HelpContext" link="#lcl.actnlist.TCustomAction.HelpContext"/>
      <element name="TSearchReplace.HelpKeyword" link="#lcl.actnlist.TCustomAction.HelpKeyword"/>
      <element name="TSearchReplace.HelpType" link="#lcl.actnlist.TCustomAction.HelpType"/>
      <element name="TSearchReplace.Hint" link="#lcl.actnlist.TCustomAction.Hint"/>
      <element name="TSearchReplace.ImageIndex" link="#lcl.actnlist.TCustomAction.ImageIndex"/>
      <element name="TSearchReplace.ShortCut" link="#lcl.actnlist.TCustomAction.ShortCut"/>
      <element name="TSearchReplace.SecondaryShortCuts" link="#lcl.actnlist.TCustomAction.SecondaryShortCuts"/>
      <element name="TSearchReplace.Visible" link="#lcl.actnlist.TCustomAction.Visible"/>
      <element name="TSearchReplace.BeforeExecute" link="#lcl.stdactns.TCommonDialogAction.BeforeExecute"/>
      <element name="TSearchReplace.OnAccept" link="#lcl.stdactns.TCommonDialogAction.OnAccept"/>
      <element name="TSearchReplace.OnCancel" link="#lcl.stdactns.TCommonDialogAction.OnCancel"/>
      <element name="TSearchReplace.OnHint" link="#lcl.actnlist.TCustomAction.OnHint"/>

      <element name="TSearchFindFirst">
        <short>
          <var>TSearchFindFirst</var> - Search action to find the first match.
        </short>
        <descr/>
        <seealso>
          <link id="TSearchFind"/>
        </seealso>
      </element>

      <element name="TSearchFindNext">
        <short>
          <var>TSearchFindNext</var> - search action to find the next match.
        </short>
        <descr/>
        <seealso>
          <link id="TCustomAction"/>
        </seealso>
      </element>

      <element name="TSearchFindNext.FSearchFind"/>
      <element name="TSearchFindNext.SetSearchFind"/>
      <element name="TSearchFindNext.SetSearchFind.AValue"/>

      <element name="TSearchFindNext.Create" link="#rtl.classes.TBasicAction.Create">
        <short>Constructor for the class instance.</short>
        <descr/>
        <seealso/>
      </element>
      <element name="TSearchFindNext.Create.TheOwner">
        <short>Owner of the class instance.</short>
      </element>

      <element name="TSearchFindNext.HandlesTarget" link="#rtl.classes.TBasicAction.HandlesTarget"/>
      <element name="TSearchFindNext.HandlesTarget.Result"/>
      <element name="TSearchFindNext.HandlesTarget.Target"/>

      <element name="TSearchFindNext.UpdateTarget" link="#rtl.classes.TBasicAction.UpdateTarget"/>
      <element name="TSearchFindNext.UpdateTarget.Target"/>

      <element name="TSearchFindNext.ExecuteTarget" link="#rtl.classes.TBasicAction.ExecuteTarget"/>
      <element name="TSearchFindNext.ExecuteTarget.Target"/>

      <element name="TSearchFindNext.Notification" link="#rtl.classes.TComponent.Notification">
        <short>
          Handles notifcations when a component used in the class instance is
          added or removed.
        </short>
        <descr/>
        <seealso/>
      </element>
      <element name="TSearchFindNext.Notification.AComponent"/>
      <element name="TSearchFindNext.Notification.Operation"/>

      <element name="TSearchFindNext.Caption" link="#lcl.actnlist.TCustomAction.Caption"/>
      <element name="TSearchFindNext.Enabled" link="#lcl.actnlist.TCustomAction.Enabled"/>
      <element name="TSearchFindNext.HelpContext" link="#lcl.actnlist.TCustomAction.HelpContext"/>
      <element name="TSearchFindNext.HelpKeyword" link="#lcl.actnlist.TCustomAction.HelpKeyword"/>
      <element name="TSearchFindNext.HelpType" link="#lcl.actnlist.TCustomAction.HelpType"/>
      <element name="TSearchFindNext.Hint" link="#lcl.actnlist.TCustomAction.Hint"/>
      <element name="TSearchFindNext.ImageIndex" link="#lcl.actnlist.TCustomAction.ImageIndex"/>

      <element name="TSearchFindNext.SearchFind">
        <short>The <var>SearchFind</var> action to use for searching.</short>
        <descr/>
        <seealso/>
      </element>

      <element name="TSearchFindNext.ShortCut" link="#lcl.actnlist.TCustomAction.ShortCut"/>
      <element name="TSearchFindNext.SecondaryShortCuts" link="#lcl.actnlist.TCustomAction.SecondaryShortCuts"/>
      <element name="TSearchFindNext.Visible" link="#lcl.actnlist.TCustomAction.Visible"/>
      <element name="TSearchFindNext.OnHint" link="#lcl.actnlist.TCustomAction.OnHint"/>

      <element name="TFontEdit">
        <short>
          <var>TFontEdit </var>- standard action for opening a
          <var>Font Edit</var> dialog.
        </short>
        <descr/>
      <seealso>
        <link id="TCommonDialogAction"/>
      </seealso>
      </element>

      <element name="TFontEdit.GetDialog">
        <short>Gets the value for the Dialog property.</short>
        <descr/>
        <seealso>
          <link id="TFontEdit.Dialog"/>
        </seealso>
      </element>
      <element name="TFontEdit.GetDialog.Result">
        <short>Value for the property.</short>
      </element>

      <element name="TFontEdit.GetDialogClass" link="#lcl.stdactns.TCommonDialogAction.GetDialogClass">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFontEdit.GetDialogClass.Result">
        <short/>
      </element>

      <element name="TFontEdit.Caption" link="#lcl.actnlist.TCustomAction.Caption"/>

      <element name="TFontEdit.Dialog">
        <short>The Font<var>Dialog</var> to use for this action.</short>
        <descr/>
        <seealso/>
      </element>

      <element name="TFontEdit.Enabled" link="#lcl.actnlist.TCustomAction.Enabled"/>
      <element name="TFontEdit.HelpContext" link="#lcl.actnlist.TCustomAction.HelpContext"/>
      <element name="TFontEdit.HelpKeyword" link="#lcl.actnlist.TCustomAction.HelpKeyword"/>
      <element name="TFontEdit.HelpType" link="#lcl.actnlist.TCustomAction.HelpType"/>
      <element name="TFontEdit.Hint" link="#lcl.actnlist.TCustomAction.Hint"/>
      <element name="TFontEdit.ImageIndex" link="#lcl.actnlist.TCustomAction.ImageIndex"/>
      <element name="TFontEdit.ShortCut" link="#lcl.actnlist.TCustomAction.ShortCut"/>
      <element name="TFontEdit.SecondaryShortCuts" link="#lcl.actnlist.TCustomAction.SecondaryShortCuts"/>
      <element name="TFontEdit.Visible" link="#lcl.actnlist.TCustomAction.Visible"/>
      <element name="TFontEdit.BeforeExecute" link="#lcl.stdactns.TCommonDialogAction.BeforeExecute"/>
      <element name="TFontEdit.OnAccept" link="#lcl.stdactns.TCommonDialogAction.OnAccept"/>
      <element name="TFontEdit.OnCancel" link="#lcl.stdactns.TCommonDialogAction.OnCancel"/>
      <element name="TFontEdit.OnHint" link="#lcl.actnlist.TCustomAction.OnHint"/>

      <element name="TColorSelect">
        <short>
          <var>TColorSelect</var> - standard action for opening a <var>Color
          Selection</var> dialog.
        </short>
        <descr/>
        <seealso>
          <link id="TCommonDialogAction"/>
        </seealso>
      </element>

      <element name="TColorSelect.GetDialog">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TColorSelect.GetDialog.Result">
        <short/>
      </element>

      <element name="TColorSelect.GetDialogClass" link="#lcl.stdactns.TCommonDialogAction.GetDialogClass">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TColorSelect.GetDialogClass.Result">
        <short/>
      </element>

      <element name="TColorSelect.Caption" link="#lcl.actnlist.TCustomAction.Caption"/>

      <element name="TColorSelect.Dialog">
        <short>The Color<var>Dialog</var> to use with this action.</short>
        <descr/>
        <seealso/>
      </element>

      <element name="TColorSelect.Enabled" link="#lcl.actnlist.TCustomAction.Enabled"/>
      <element name="TColorSelect.HelpContext" link="#lcl.actnlist.TCustomAction.HelpContext"/>
      <element name="TColorSelect.HelpKeyword" link="#lcl.actnlist.TCustomAction.HelpKeyword"/>
      <element name="TColorSelect.HelpType" link="#lcl.actnlist.TCustomAction.HelpType"/>
      <element name="TColorSelect.Hint" link="#lcl.actnlist.TCustomAction.Hint"/>
      <element name="TColorSelect.ImageIndex" link="#lcl.actnlist.TCustomAction.ImageIndex"/>
      <element name="TColorSelect.ShortCut" link="#lcl.actnlist.TCustomAction.ShortCut"/>
      <element name="TColorSelect.SecondaryShortCuts" link="#lcl.actnlist.TCustomAction.SecondaryShortCuts"/>
      <element name="TColorSelect.Visible" link="#lcl.actnlist.TCustomAction.Visible"/>
      <element name="TColorSelect.BeforeExecute" link="#lcl.stdactns.TCommonDialogAction.BeforeExecute"/>
      <element name="TColorSelect.OnAccept" link="#lcl.stdactns.TCommonDialogAction.OnAccept"/>
      <element name="TColorSelect.OnCancel" link="#lcl.stdactns.TCommonDialogAction.OnCancel"/>
      <element name="TColorSelect.OnHint" link="#lcl.actnlist.TCustomAction.OnHint"/>

      <element name="Register">
        <short>Registers component for use in the Lazarus IDE.</short>
        <descr>
          <p>
            The following components are registered but not displayed on the
            Lazarus IDE component palette:
          </p>
          <p>
            <b>Edit</b> Actions
          </p>
          <ul>
            <li>TEditCut</li>
            <li>TEditCopy</li>
            <li>TEditPaste</li>
            <li>TEditSelectAll</li>
            <li>TEditUndo</li>
            <li>TEditDelete</li>
          </ul>
          <p>
            <b>Search</b> Actions
          </p>
          <ul>
            <li>TSearchFind</li>
            <li>TSearchReplace</li>
            <li>TSearchFindFirst</li>
            <li>TSearchFindNext</li>
          </ul>
          <p>
            <b>Help</b> Actions
          </p>
          <ul>
            <li>THelpAction</li>
            <li>THelpContents</li>
            <li>THelpTopicSearch</li>
            <li>THelpOnHelp</li>
            <li>THelpContextAction</li>
          </ul>
          <p>
            <b>Dialog</b> Actions
          </p>
          <ul>
            <li>TFontEdit</li>
            <li>TColorSelect</li>
          </ul>
          <p>
            <b>File</b> Actions
          </p>
          <ul>
            <li>TFileOpen</li>
            <li>TFileOpenWith</li>
            <li>TFileSaveAs</li>
            <li>TFileExit</li>
          </ul>
        </descr>
        <seealso/>
      </element>

    </module>
    <!-- StdActns -->
  </package>
</fpdoc-descriptions>
