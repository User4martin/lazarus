<?xml version="1.0" encoding="UTF-8"?>
<fpdoc-descriptions>
  <package name="lcl">
    <!--
  ====================================================================
    Chart
  ====================================================================
-->
    <module name="Chart">
      <short>Classes for constructing Bar Charts</short>
      <descr/>
      <!-- unresolved type reference Visibility: default -->
      <element name="SysUtils">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Classes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LCLProc">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Controls">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="ExtCtrls">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Graphics">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Dialogs">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TBar">
        <short>
          <var>TBar</var> - base class for <var>TBarChartItems</var> in a <var>TBarChart</var>
          <var/>
        </short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TBar.FSName">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TBar.FValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TBar.FColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TCustomBarChart">
        <short>
          <var>TCustomBarChart</var> - base class for <var>TBarChart</var>
        </short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomBarChart.FUpdateCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomBarChart.FBars">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomBarChart.FDepth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomBarChart.NormalizeScaleUnits">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomBarChart.NormalizeScaleUnits.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomBarChart.NormalizeScaleUnits.OldScale">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomBarChart.Paint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TCustomBarChart.Create">
        <short>
          <var>Create</var> - constructor for <var>TCustomBarChart</var>: calls inherited <var>Create</var> and creates the bars, sets initial bounds and label position</short>
        <descr/>
        <errors/>
        <seealso>
          <link id="#rtl.Classes.TComponent.Create">TComponent.Create</link>
          <link id="#LCL.ExtCtrls.TCustomPanel.Create">TCustomPanel.Create</link>
        </seealso>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomBarChart.Create.AOwner">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TCustomBarChart.Destroy">
        <short>
          <var>Destroy</var> - destructor for <var>TCustomBarChart</var>: frees the bars and calls inherited <var>Destroy</var>
        </short>
        <descr/>
        <errors/>
        <seealso>
          <link id="#rtl.Classes.TComponent.Destroy">TComponent.Destroy</link>
          <link id="#LCL.ExtCtrls.TCustomPanel.Destroy">TCustomPanel.Destroy</link>
        </seealso>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomBarChart.Clear">
        <short>
          <var>Clear</var> - remove all previous contents and start with a blank BarChart</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TCustomBarChart.AddBar">
        <short>
          <var>AddBar</var> - add a bar with the specified properties (name, value and colour) to the BarChart</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomBarChart.AddBar.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomBarChart.AddBar.SName">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomBarChart.AddBar.Value">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomBarChart.AddBar.AColor">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TCustomBarChart.GetBar">
        <short>
          <var>GetBar</var> - collect the data for one of the bars</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomBarChart.GetBar.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomBarChart.GetBar.SId">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TCustomBarChart.BarCount">
        <short>
          <var>BarCount</var> - number of bars in the chart</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomBarChart.BarCount.Result">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomBarChart.BeginUpdate">
        <short>
          <var>BeginUpdate</var> - start updating</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomBarChart.EndUpdate">
        <short>
          <var>EndUpdate</var> - finish updating</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomBarChart.Depth">
        <short>The <var>Depth</var> of the bars in the chart</short>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TBarChart">
        <short>
          <var>TBarChart</var> - graph in which each value is represented by the length or height of a bar</short>
        <descr>
          <p>
            <var>TBarChart</var> - graph in which each value is represented by the length or height of a bar</p>
          <p>The Bars are defined in <var>TCustomBarChart</var>
          </p>
        </descr>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.Align" link="#LCL.Controls.TControl.Align">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.Alignment" link="#LCL.ExtCtrls.TCustomPanel.Alignment">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.Anchors" link="#LCL.Controls.TControl.Anchors">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.AutoSize" link="#LCL.Controls.TControl.AutoSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.BorderSpacing" link="#LCL.Controls.TControl.BorderSpacing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.BevelInner" link="#LCL.ExtCtrls.TCustomPanel.BevelInner">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.BevelOuter" link="#LCL.ExtCtrls.TCustomPanel.BevelOuter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.BevelWidth" link="#LCL.ExtCtrls.TCustomPanel.BevelWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.BorderWidth" link="#LCL.Controls.TWinControl.BorderWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.BorderStyle" link="#LCL.Controls.TWinControl.BorderStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.Caption" link="#LCL.Controls.TControl.Caption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.ClientHeight" link="#LCL.Controls.TControl.ClientHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.ClientWidth" link="#LCL.Controls.TControl.ClientWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.Color" link="#LCL.Controls.TControl.Color">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.Constraints" link="#LCL.Controls.TControl.Constraints">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.Depth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.DragMode" link="#LCL.Controls.TControl.DragMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.Enabled" link="#LCL.Controls.TControl.Enabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.Font" link="#LCL.Controls.TControl.Font">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.FullRepaint" link="#LCL.ExtCtrls.TCustomPanel.FullRepaint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.ParentColor" link="#LCL.Controls.TControl.ParentColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.ParentFont" link="#LCL.Controls.TControl.ParentFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.ParentShowHint" link="#LCL.Controls.TControl.ParentShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.PopupMenu" link="#LCL.Controls.TControl.PopupMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.ShowHint" link="#LCL.Controls.TControl.ShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.TabOrder" link="#LCL.Controls.TWinControl.TabOrder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.TabStop" link="#LCL.Controls.TWinControl.TabStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.Visible" link="#LCL.Controls.TControl.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.OnClick" link="#LCL.Controls.TControl.OnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.OnDblClick" link="#LCL.Controls.TControl.OnDblClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.OnDragDrop" link="#LCL.Controls.TControl.OnDragDrop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.OnDragOver" link="#LCL.Controls.TControl.OnDragOver">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.OnEndDrag" link="#LCL.Controls.TControl.OnEndDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.OnEnter" link="#LCL.Controls.TWinControl.OnEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.OnExit" link="#LCL.Controls.TWinControl.OnExit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.OnMouseDown" link="#LCL.Controls.TControl.OnMouseDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.OnMouseMove" link="#LCL.Controls.TControl.OnMouseMove">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.OnMouseUp" link="#LCL.Controls.TControl.OnMouseUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.OnResize" link="#LCL.Controls.TControl.OnResize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBarChart.OnStartDrag" link="#LCL.Controls.TControl.OnStartDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: default -->
      <element name="Register">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TBar.SName">
        <short>
          <var>SName</var> - the name identifying this bar in the barchart</short>
      </element>
      <element name="TBar.Value">
        <short>The numerical <var>Value</var> or size of this bar in the barchart</short>
      </element>
      <element name="TBar.Color">
        <short>The <var>Color</var> to be used to draw this bar in the barchart</short>
      </element>
      <element name="TBarChartItems">
        <short>
          <var>TBarChartItems</var> - the collection of items defining the bars in this barchart</short>
      </element>
      <element name="TBarChartItems.Create">
        <short>
          <var>Create</var> - constructor for <var>TBarChartItems</var>: calls inherited <var>Create</var> and attaches itself to the nominated <var>BarChart</var>
        </short>
        <seealso>
          <link id="#rtl.Classes.TCollection.Create">TCollection.Create</link>
        </seealso>
      </element>
      <element name="TCustomBarChart.Bars">
        <short>
          <var>Bars</var> - the collection of bars that comprise the BarChart</short>
      </element>
      <element name="TCustomBarChart.LabelPosition">
        <short>
          <var>LabelPosition</var> - left, centered or right</short>
      </element>
      <element name="TCustomBarChart.GetControlClassDefaultSize" link="#LCL.Controls.TControl.GetControlClassDefaultSize"/>
      <element name="TCustomBarChart.UpdateBarChart">
        <short>
          <var>UpdateBarChart</var> - fill in any new information</short>
      </element>
    </module>
    <!-- Chart -->
  </package>
</fpdoc-descriptions>
