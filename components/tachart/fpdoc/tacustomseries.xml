<?xml version="1.0" encoding="UTF-8"?>
<fpdoc-descriptions>
  <package name="TAChartLazarusPkg">
    <module name="TACustomSeries">
      <element name="TCustomChartSeries">
        <short>Basic chart series. Inherit this if you want to create a new series type.</short>
      </element>
      <element name="TChartGetMarkEvent"/>
      <element name="TChartSeries.Count">
        <short>Returns the number of points in the series.</short>
      </element>
      <element name="TChartSeries.Add">
        <short>Add new point to the right of the series.</short>
        <descr>
          <p>The X coordinate of the new point is calculated as the rightmost existing X coordinate plus 1.</p>
          <p>Requires <link id="TChartSeries.ListSource">editable data source</link>.</p>
        </descr>
        <seealso>
          <link id="TChartSeries.AddXY">AddXY</link>
        </seealso>
        <errors>
          <link id="TASources.EEditableSourceRequired">EEditableSourceRequired</link>
        </errors>
      </element>
      <element name="TChartSeries.AddXY">
        <short>Add a new point to the series.</short>
        <descr><p>Requires <link id="TChartSeries.ListSource">editable data source</link>.</p>
        </descr>
        <errors><link id="TASources.EEditableSourceRequired">EEditableSourceRequired</link>
        </errors>
      </element>
      <element name="TChartSeries.ListSource">
        <errors><link id="TASources.EEditableSourceRequired">EEditableSourceRequired</link>
        </errors>
        <short>Verifies that the data source is editable and returns it (or <var>nil</var> if the source is not a <var>TListChartSource</var>)</short>
      </element>
      <element name="TChartSeries.Clear">
        <short>Remove all points from the series.</short>
        <descr><p>Requires <link id="TChartSeries.ListSource">editable data source</link>.</p>
        </descr>
      </element>
      <element name="TChartSeries.Delete">
        <errors><link id="TASources.EEditableSourceRequired">EEditableSourceRequired</link>
        </errors>
        <short>Removes  a data point by index.</short>
        <descr><p>Requires <link id="TChartSeries.ListSource">editable data source</link>.</p>
        </descr>
      </element>
      <element name="TChartSeries.SetXValue"/>
      <element name="TChartSeries.SetYValue"/>
      <element name="TChartSeries.Source">
        <short>Series data source.</short>
      </element>
      <element name="TChartSeries.Marks">
        <short>Mark parameters.</short>
      <descr>Marks are the text labels drawn for each data point.
</descr>
      </element>
      <element name="TChartSeries.OnGetMark">
        <short>Called before the drawing of each mark.</short>
        <seealso><link id="TChartSeries.Marks">Marks</link>
        </seealso>
      </element>
      <element name="TChartSeries">
        <short>Series with the data source.</short>
      <descr><var>TChartSeries</var> is the ancestor of all series types which get the data
from a <link id="TACustomSource.TCustomChartSource"><var>chart source</var>
          </link>.
</descr>
      </element>
      <element name="TChartSeries.Title" link="#TAChartLazarusPkg.TAGraph.TBasicChartSeries.Title"/>
      <element name="TChartSeries.GetColor">
        <short>Return the color of the point number <var>AIndex</var>
        </short>
      </element>
      <element name="TChartSeries.SetColor">
        <short>Set the color of the point number <var>AIndex</var> to <var>AColor</var>
        </short>
      </element>
      <element name="TChartSeries.DefaultFormattedMark">
        <short>Return the label for the point number <var>AIndex</var> formatted as per <var>Marks</var> property</short>
      </element>
      <element name="TChartSeries.Extent">
        <short>Returns the bounding rectangle for all points in the serie.</short>
        <seealso><link id="TASources.TCustomChartSource.Extent">TCustomChartSource.Extent</link>
        </seealso>
      </element>
      <element name="TChartSeries.FormattedMark">
        <short>Return the label for the point number <var>AIndex</var> obtained by <var>OnGetMark</var> event, or <var>DefaultFormattedMark</var>.</short>
      </element>
    <element name="TCustomChartSeries.AxisToGraph"><short>Converts point coordinates from axis to graph units</short><descr><p><b>Axis coordinates</b> (known in some other applications as object coordinates)
refer to the "raw" coordinate values obtained from the data.
As the name implies, axis coordinates are interpreted in terms of the specific axis
-- the same coordinate value may have different meanings depending on the axis it is applied to.</p><p><b>Graph coordinates</b> are converted from the axis coordinates using axis transformations, such as logarithmic scale.
Graph coordinates are common to all objects in the chart.
Consider the graph coordinates as an invisible graphing paper behind the chart;
its x axis is horizontal running from left to right, and its y axis is vertical
running from bottom to top even if a series is rotated.</p><p><b>Image coordinates</b> roughly correspond to the screen pixels and are
  converted from graph coordinates based on the chart viewport. This transformation is always linear and can be influenced by chart tools such as zooming and panning.</p>
        </descr><seealso>For conversion from graph to image coordinates, see
<link id="TAGraph.TChart.GraphToImage"/>
        </seealso>
      </element><element name="TCustomChartSeries.AxisToGraphX"/><element name="TCustomChartSeries.AxisToGraphY"><seealso>For conversion from graph to image coordinates, see
<link id="TAGraph.TChart.YGraphToImage"/>
        </seealso>
      </element><element name="TCustomChartSeries.GetAxisX"><short>Returns the x axis to which this series is assigned</short><seealso><var><link id="TAChartAxis.TChartAxis"/>
          </var>
        </seealso>
      </element><element name="TCustomChartSeries.GetAxisY"><short>Converts the y axis to which this axis is assigned.</short><seealso><var><link id="TAChartAxis.TChartAxis"/>
          </var>
        </seealso>
      </element><element name="TCustomChartSeries.GraphToAxis"><short>Converts point coordinates from graph to axis units</short><descr><p><b>Axis coordinates</b> (known in some other applications as object coordinates)
refer to the "raw" coordinate values obtained from the data.
As the name implies, axis coordinates are interpreted in terms of the specific axis
-- the same coordinate value may have different meanings depending on the axis it is applied to.</p><p><b>Graph coordinates</b> are converted from the axis coordinates using axis transformations, such as logarithmic scale.
Graph coordinates are common to all objects in the chart.
Consider the graph coordinates as an invisible graphing paper behind the chart;
its x axis is horizontal running from left to right, and its y axis is vertical
running from bottom to top even if a series is rotated.</p><p><b>Image coordinates</b> roughly correspond to the screen pixels and are
  converted from graph coordinates based on the chart viewport. This transformation is always linear and can be influenced by chart tools such as zooming and panning.</p>
        </descr><seealso>For conversion from image to graph coordinates, see
<link id="TAGraph.TChart.ImageToGraph"/>
        </seealso>
      </element><element name="TCustomChartSeries.GraphToAxisX"><short>Converts the x coordinate of a point from graph to axis units</short><seealso>For conversion from image to graph coordinates, see
<link id="TAGraph.TChart.XImageToGraph"/>
        </seealso>
      </element><element name="TCustomChartSeries.GraphToAxisY"><seealso>For conversion from image to graph coordinates, see
<link id="TAGraph.TChart.YImageToGraph"/>
        </seealso>
      </element><element name="TCustomChartSeries.IsRotated"><short>Returns <var>true</var> when the axes of a series are exchanged</short><descr>In a rotated series, the <link id="TCustomSeries.AxisIndexX"><var>AxisIndexX</var>
          </link> of the series is assigned to
the index of a vertical axis, e.g. the chart's
<link id="TAGraph.TChart.LeftAxis"><var>LeftAxis</var>
          </link>,
and the <link id="TCustomSeries.AxisIndexY"><var>AxisIndexY</var>
          </link> is
assigned to the index of a horizontal axis, e.g. the chart's
<link id="TAGraph.TChart.Bottomaxis"><var>BottomAxis</var>
          </link>;.
</descr>
      </element><element name="TCustomChartSeries.GetGraphBounds"><seealso><var><link id="TAChartUtils.TDoubleRect"/>
          </var>
        </seealso>
      </element><element name="TCustomChartSeries.GetAxisBounds"><seealso><link id="TAChartAxis.TChartAxis"/>
        </seealso>
      </element><element name="TCustomChartSeries.AxisIndexX"><short>Defines the index of the axis along which the x coordinates of the data points are plotted</short><descr><p>By default (when <var>AxisIndexX</var> is -1), the x axis is the
<link id="TAGraph.TChart.BottomAxis"><var>BottomAxis</var>
            </link> of the chart.</p><p>Note that the <var>AxisIndexX</var> absolutely must be assigned if the
horizontal axis of the series is subject to an axis transformation.</p>
        </descr>
      </element><element name="TCustomChartSeries.AxisIndexY"><short>Defines the index of the axis along which the y coordinates of the data points are plotted</short><descr><p>By default (when <var>AxisIndexY</var> is -1), the y axis is the
<link id="TAGraph.TChart.LeftAxis"><var>LeftAxis</var>
            </link>
          </p><p>Note that the <var>AxisIndexY</var> absolutely must be assigned if the
vertical axis of the series is subject to an axis transformation.</p>
        </descr>
      </element><element name="TCustomChartSeries.Title"><short>Text by which the series is represented in the legend of the chart</short><seealso><var><link id="TALegend.TLegend"/>
          </var>
        </seealso><descr>The <link id="TAGraph.TChart.Legend">legend</link> usually lists all the series of a chart.
</descr>
      </element><element name="TCustomChartSeries.ShowInLegend"><short>Determines whether the series should be displayed in the legend of the chart</short><descr>This property is deprecated. New code should use the subproperty
<link id="TALegend.TChartSeriesLegend.Visible"><var>Visible</var>
          </link> of the series property
<link id="TALegend.TChartSeriesLegend"><var>Legend</var>
          </link>.
</descr><seealso><p><var><link id="TAGraph.TChart.Legend"/>
            </var>
          </p><p><var><link id="TALegend.TSeriesLiegend"/>
            </var>
          </p>
        </seealso>
      </element>
    <element name="TCustomChartSeries.Shadow"/>
    <element name="TBasicPointSeries.Pointer"><short>Defines the data point symbols</short><descr>The series pointer is a symbol of adjustable size and shape which is drawn by some
series at the position of the data points. This symbol is also displayed in the
<link id="TALegend.TChartLegend">legend</link> to identify the series.
</descr>
      </element>
    <element name="TChartSeries.GetXYCountNeeded"><short>Returns the minimum count of x and y values which a ChartSource must provide for this series class.</short>
      </element><element name="TChartSeries.CheckSource"><short>Checks whether the specified chart source fulfills the minimum requirements of this series class</short><errors><ul><li><link id="EXCountError"><var>EXCountError</var>
              </link> when the ChartSource provides less x values
per data points than specified by <link id="TChartSeriesGetXYCountNeeded"><var>GetXYCountNeeded</var>
              </link>.</li><li><link id="EYCountError"><var>EYCountError</var>
              </link> when the ChartSource provides less y values
per data points than specified by <link id="TChartSeriesGetXYCountNeeded"><var>GetXYCountNeeded</var>
              </link>.</li>
          </ul>
        </errors>
      </element>
    <element name="TCustomChartSeries.DepthBrightnessDelta"><short>Defines amount of brightness change applied to series side areas in 3D mode.</short><descr><p>The extrudes sides of a series in 3D mode can be painted darker or brighter than the series itself when the property
<var>DepthBrightnessDelta</var> has a negative or positive value, respectively.</p><p>The value specified is added to the rgb color components of the series color.</p><p>Use a negative value, such as -32, to moderately darken the series sides. </p><p/>
By default, i.e. <var>DepthBrightnessDelta=0</var>, the series sides have the same color as the series itself.
</descr>
      </element>
    <element name="TChartSeries.FindYRange"><short>Finds the y maximum and minimum of the series data having an x between AXMin and AXMax</short>
      </element><element name="TChartSeries.IsEmpty"><short>Returns true when the series contains no data.</short>
      </element><element name="TChartSeries.LastValueIndex"><short>Returns the index of the last data point.</short>
      </element><element name="TChartSeries.MaxXValue"><short>Returns the largest x value</short>
      </element><element name="TChartSeries.MinXValue"><short>Returns the smallest x value</short>
      </element><element name="TChartSeries.MaxYValue"><short>Returns the largest y value</short>
      </element><element name="TChartSeries.MinYValue"><short>Returns the smallest y value</short>
      </element><element name="TChartSeries.XValue"><short>Returns the x value of the data point with the given index</short>
      </element><element name="TChartSeries.YValue"><short>Returns the y value of the data point with the given index</short>
      </element><element name="TChartSeries.XValues"><short>If a source provides data points with multiple x values, the x value with the index <var>AXIndex</var> is returned for the data point at index <var>AIndex</var>
        </short>
      </element><element name="TChartSeries.YValues"><short>If a source provides data points with multiple y values, the y value with the index <var>AYIndex</var> is returned for the data point at index <var>AIndex</var>
        </short>
      </element>
    </module>
  </package>
</fpdoc-descriptions>
