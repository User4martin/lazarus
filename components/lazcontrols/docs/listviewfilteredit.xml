<?xml version="1.0" encoding="UTF-8"?>
<fpdoc-descriptions>
  <package name="LazControls">

    <module name="ListViewFilterEdit">
      <short>Implements a control used to filter an associated TListView control.</short>
      <descr>
        <p>
          <file>ListViewFilterEdit</file> contains classes and types used to implement the <var>TListViewFilterEdit</var> control. It is used to filter the items displayed for an associated <var>TListView</var> control.
        </p>
        <p>
          This file is part of the <file>LazControls</file> package.
        </p>
      </descr>

      <!-- unresolved external references -->
      <element name="Classes"/>
      <element name="SysUtils"/>
      <element name="Math"/>
      <element name="Fgl"/>
      <element name="LCLType"/>
      <element name="Graphics"/>
      <element name="ComCtrls"/>
      <element name="EditBtn"/>
      <element name="LazUTF8"/>

      <element name="TStringArray">
        <short/>
        <descr/>
        <seealso/>
      </element>

      <element name="TListViewDataItem">
        <short>
          Record type with data and lines of text for an item in a list view control.
        </short>
        <descr>
          <p>
            TListViewDataItem is the typed maintained in TListViewDataList.
          </p>
        </descr>
        <seealso/>
      </element>

      <element name="TListViewDataItem.Data">
        <short>Pointer to the data for the list item.</short>
        <descr/>
        <seealso/>
      </element>

      <element name="TListViewDataItem.StringArray">
        <short>Array of String values with the text displayed for the list item.</short>
        <descr/>
        <seealso/>
      </element>

      <element name="TListViewDataItem.OperatorEqual">
        <short>
          Implements the Equal (=) comparison operator for TListViewDataItem instances.
        </short>
        <descr>
          <p>
            The return value is <b>True</b> when both the <var>Data</var> and the <var>StringArray</var> for the compared <var>TListViewDataItem</var> instances are the same.
          </p>
        </descr>
        <seealso/>
      </element>
      <element name="TListViewDataItem.OperatorEqual.Result">
        <short>True when the compared items have the same Data and StringArray values.</short>
      </element>
      <element name="TListViewDataItem.OperatorEqual.a">
        <short>TListViewDataItem instance for the comparison operator.</short>
      </element>
      <element name="TListViewDataItem.OperatorEqual.b">
        <short>TListViewDataItem instance for the comparison operator.</short>
      </element>

      <element name="TListViewDataList">
        <short>List container for TListViewDataItem instances.</short>
        <descr>
          <p>
            <var>TListViewDataList</var> is a specialization of TFPGList to use TListViewDataItem instances in the container. TListViewDataList is the type used to implement the <var>Items</var> property in <var>TListViewFilterEdit</var>.
          </p>
        </descr>
        <seealso>
          <link id="TListViewDataItem"/>
          <link id="TListViewFilterEdit.Items"/>
          <link id="#fcl.Fgl.TFPGList">TFPGList</link>
        </seealso>
      </element>

      <element name="TListViewFilterEdit">
        <short>Implements a control used to filter an associated TListView control.</short>
        <descr/>
        <seealso/>
      </element>

      <!-- private members and methods -->
      <element name="TListViewFilterEdit.FFilteredListview">
        <short>TListView control showing the filtered data.</short>
      </element>

      <element name="TListViewFilterEdit.FByAllFields">
        <short>Stores the value for the ByAllFields property.</short>
      </element>

      <element name="TListViewFilterEdit.FSelectionList">
        <short>Stores / restores the previous selections in the associated control.</short>
      </element>

      <element name="TListViewFilterEdit.FOriginalData">
        <short>Data supplied by the caller through the Items property.</short>
      </element>

      <element name="TListViewFilterEdit.FFilteredData">
        <short>Data sorted for viewing.</short>
      </element>

      <element name="TListViewFilterEdit.MatchesFilter">
        <short/>
      </element>
      <element name="TListViewFilterEdit.MatchesFilter.Result">
        <short/>
      </element>
        <short/>
        <element name="TListViewFilterEdit.MatchesFilter.AData">
      </element>

      <element name="TListViewFilterEdit.SetFilteredListview">
        <short/>
      </element>
      <element name="TListViewFilterEdit.SetFilteredListview.AValue">
        <short/>
      </element>

      <!-- protected methods -->
      <element name="TListViewFilterEdit.Notification">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TListViewFilterEdit.Notification.AComponent">
        <short/>
      </element>
      <element name="TListViewFilterEdit.Notification.Operation">
        <short/>
      </element>

      <element name="TListViewFilterEdit.GetLastSelectedIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TListViewFilterEdit.GetLastSelectedIndex.Result">
        <short/>
      </element>

      <element name="TListViewFilterEdit.MoveTo">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TListViewFilterEdit.MoveTo.AIndex">
        <short/>
      </element>
      <element name="TListViewFilterEdit.MoveTo.ASelect">
        <short/>
      </element>

      <element name="TListViewFilterEdit.MoveNext">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TListViewFilterEdit.MoveNext.ASelect">
        <short/>
      </element>

      <element name="TListViewFilterEdit.MovePrev">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TListViewFilterEdit.MovePrev.ASelect">
        <short/>
      </element>

      <element name="TListViewFilterEdit.MovePageUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TListViewFilterEdit.MovePageUp.ASelect">
        <short/>
      </element>

      <element name="TListViewFilterEdit.MovePageDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TListViewFilterEdit.MovePageDown.ASelect">
        <short/>
      </element>

      <element name="TListViewFilterEdit.MoveHome">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TListViewFilterEdit.MoveHome.ASelect">
        <short/>
      </element>

      <element name="TListViewFilterEdit.MoveEnd">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TListViewFilterEdit.MoveEnd.ASelect">
        <short/>
      </element>

      <element name="TListViewFilterEdit.ReturnKeyHandled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TListViewFilterEdit.ReturnKeyHandled.Result">
        <short/>
      </element>

      <element name="TListViewFilterEdit.SortAndFilter">
        <short/>
        <descr/>
        <seealso/>
      </element>

      <element name="TListViewFilterEdit.ApplyFilterCore">
        <short>
          Implements the method used to apply filter data to the associated control.
        </short>
        <descr>
          <p>
            Called when the ApplyFilter method in the ancestor class is executed.
          </p>
        </descr>
        <seealso/>
      </element>

      <element name="TListViewFilterEdit.GetDefaultGlyphName">
        <short>Gets the default resource name for the button glyph on the control.</short>
        <descr/>
        <seealso/>
      </element>
      <element name="TListViewFilterEdit.GetDefaultGlyphName.Result">
        <short>Resource name for the button glyph.</short>
      </element>

      <!-- public methods and properties -->
      <element name="TListViewFilterEdit.Create">
        <short>Constructor for the class instance.</short>
        <descr>
          <p>
            <var>Create</var> is the overridden constructor for the class instance, and calls the inherited method on entry. It allocates resources for the <var>SelectionList</var> and <var>Items</var> properties. It creates an internal <var>TListViewDataList</var> instance used to store the filtered data for the list view control.
          </p>
        </descr>
        <seealso/>
      </element>
      <element name="TListViewFilterEdit.Create.AOwner">
        <short>Owner of the class instance.</short>
      </element>

      <element name="TListViewFilterEdit.Destroy">
        <short>Destructor for the class instance.</short>
        <descr>
          <p>
            <var>Destroy</var> is the overridden destructor for the class instance. It frees resources allocated to <var>SelectionList</var>, <var>Items</var>, and the internal filtered data list. It calls the inherited method prior to exit.
          </p>
        </descr>
        <seealso/>
      </element>

      <element name="TListViewFilterEdit.StoreSelection">
        <short/>
        <descr/>
        <seealso/>
      </element>

      <element name="TListViewFilterEdit.RestoreSelection">
        <short/>
        <descr/>
        <seealso/>
      </element>

      <element name="TListViewFilterEdit.SelectionList">
        <short>Selected items restored after filtering.</short>
        <descr>
          <p>
            The list of selected items in the list view control. They are restored after filtering is applied.
          </p>
        </descr>
        <seealso/>
      </element>

      <element name="TListViewFilterEdit.Items">
        <short>Maintains the data which is filtered and shown in the ListView.</short>
        <descr/>
        <seealso/>
      </element>

      <!-- published properties -->
      <element name="TListViewFilterEdit.FilteredListview">
        <short>The associated TListView control.</short>
        <descr/>
        <seealso/>
      </element>

      <element name="TListViewFilterEdit.ByAllFields">
        <short>Indicates if all fields are compared using the filter.</short>
        <descr>
          <p>
            When set to <b>True</b>, all fields in the list view data areused when searching for a value that matches the filter. Otherwise, only the first field is used. The default value for the property is <b>False</b>.
          </p>
          <p>
            <var>ByAllFields</var> is used when <var>SortAndFilter</var> is called to select and order the filtered data for the control.
          </p>
        </descr>
        <seealso/>
      </element>

    </module>

  </package>
</fpdoc-descriptions>
